function [t, y] = NP_orbit(y0, delta_t, parameters)
  global cds contopts
  t = linspace(0, delta_t, 1000);
  if cds.using_cvode
    [~, y] = cds.integrator( ...
      't_values',                t, ...
      'initial_point',           y0, ...
      'ode_parameters',          cell2mat(parameters), ...
      'abs_tol',                 contopts.integration_abs_tol, ...
      'rel_tol',                 contopts.integration_rel_tol  ...
    );
  else
    integration_opt = odeset(...
      'AbsTol',      contopts.integration_abs_tol,    ...
      'RelTol',      contopts.integration_rel_tol     ...
    );
    if ~ isempty(cds.jacobian_ode)
      integration_opt = odeset(integration_opt, ...
        'Jacobian',     @(t,y) feval(cds.jacobian_ode,t,y,parameters{:}));
    end
    f = @(t, y) cds.dydt_ode(t, y, parameters{:});
    [t, y] = cds.integrator(f, t, y0, integration_opt);
  end
  