Code formatting guidelines

by Carel Jonkhout

These are some guidelines I used when formatting code in cl_matcontL

----- maximum line length is 80. Break long lines with dots ( ... ) like so:

write this:

some_function(very_long_argument1, very_long_argument2, ...
  very_long_argument3, very_long_argument4)

instead of this:

some_function(very_long_argument1, very_long_argument2, very_long_argument3, very_long_argument4)


----- Indentation size is 2

----- Put spaces in function calls after a comma

----- Fix code analyzer warnings, or put and ignore warning directive 
( i.e. %#ok<SPRIX> ), and comment on why the warning was ignored.


----- do not use fprintf or disp, but print_diag

Try to debug using the debugger.

do your print-and-run-debugging using:

print_diag(priority, format_string, arguments)

with priority > 0. This way, all debug info can be switched off all at once by
setting the options contopts.console_output_level and 
contopts.contL_DiagnosticsLevel to zero. Also, debug info will be logged to file
, if a logfile is kept (A logfile is kept by default).







