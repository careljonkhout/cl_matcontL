%
% i:                index of shooting-point from where to start
% phases_0:         vector to which the monodromy map is applied
% time_interval:    length of the time interval for time integration
% parameters:       cell array of parameters for the jacobian of the ode
function Mx  = monodromy_map(i, phases_0, time_interval, parameters)
  global cds
  int_opt = odeset(...
    'AbsTol',       1e-10,    ...
    'RelTol',       1e-10,    ...
    'BDF',          'off',   ...
    'MaxOrder',     5,      ...
    'NormControl',  'off',  ...
    'Refine',       1, ...
    'Jacobian',     @(t,y) feval(cds.jacobian_ode, ...
                      t, deval(cds.trajectories(i),t), parameters{:}) ...
  );                
  dydt_mon = @(t, y) ...
    cds.jacobian_ode(t, deval(cds.trajectories(i), t), parameters{:}) * y;
  [~,trajectory] = ode15s(dydt_mon, [0 time_interval], phases_0, int_opt);
  Mx = trajectory(end,:)';
end