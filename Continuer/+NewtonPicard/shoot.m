% Computes the solution of the initial value problem x(0) = x, x'(t) = f(x),
% where f is defined by cds.dydt_ode, and returns x(delta_t). If cds.using_cvode
% is false, the initial value problem is solved using solver from the matlab ode
% suite or a fully compatible alternative. The specific solver is specified by
% cds.integrator.
function x_end = shoot(x, delta_t, parameters)
  global cds contopts
  if cds.using_cvode
    [~,orbit] = cds.integrator( ...
      't_values',                [0 delta_t], ...
      'initial_point',           x, ...
      'ode_parameters',          cell2mat(parameters), ...
      'abs_tol',                 contopts.integration_abs_tol, ...
      'rel_tol',                 contopts.integration_rel_tol  ...
    ); 
  else
    integration_opt = odeset(...
      'AbsTol',      contopts.integration_abs_tol,    ...
      'RelTol',      contopts.integration_rel_tol     ...
    );
    if ~ isempty(cds.jacobian_ode)
      integration_opt = odeset(integration_opt, ...
      'Jacobian',     @(t,y) feval(cds.jacobian_ode,t,y,parameters{:}));
    end
    f = @(t, y) cds.dydt_ode(t, y, parameters{:});
    [~, orbit] = cds.integrator(f, [0 delta_t], x, integration_opt);
  end
  x_end = orbit(end,:)';