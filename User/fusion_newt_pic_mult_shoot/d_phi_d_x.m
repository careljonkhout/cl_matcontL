function dphidx = d_phi_d_x(x,dx, period, parameters)
  h=1e-6;
  x = x - h*dx;
  phi_1 = shoot(x, period, parameters);
  x = x + 2*h*dx;
  phi_2 = shoot(x, period, parameters);
  dphidx = (phi_2 - phi_1)/h/2;  
  
  function x_end = shoot(x, period, parameters)
  global cds
  f =@(t, y) cds.dydt_ode(t, y, parameters{:});
  integration_opt = odeset(...
    'AbsTol',      1e-10,    ...
    'RelTol',      1e-10,    ...
    'BDF',         'off',   ...
    'MaxOrder',     5,      ...
    'NormControl',  'off',  ...
    'Refine',       1,      ...
    'Jacobian',     @(t,y) feval(cds.jacobian_ode,t,y,parameters{:}) ...
  );
  [~, trajectory] = ode15s(f, [0 period], x, integration_opt);
  x_end = trajectory(end,:)';