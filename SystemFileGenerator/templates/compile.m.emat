function compile()
  mc_path        = get_cl_matcontL_path();
  generator_path = fullfile(mc_path, 'SystemFileGenerator');
  sundails_path  = fullfile(generator_path, 'sundails');
  system_name    = '<%= s.name %>';
  systems_path   = fullfile(mc_path, 'Systems');
  system_path    = fullfile(systems_path, system_name);

  mex( ...
    fullfile(system_path, 'dydt_mex.c'), ...
    ['-I' fullfile(generator_path, 'cvode_mex')], ... 
    '-output', ...
    fullfile(systems_path, [system_name '_dydt']))


  derivatives_for_cvode = {};

  if <%= s.max_ord_derivatives %> >= 1
    mex( ...
      fullfile(system_path, 'jacobian_mex.c'), ...
      ['-I' fullfile(generator_path, 'cvode_mex')], ... 
      '-output', ...
      fullfile(systems_path, [system_name '_jacobian']))

    mex( ...
      fullfile(system_path, 'jacobian_params_mex.c'), ...
      ['-I' fullfile(generator_path, 'cvode_mex')], ... 
      '-output', ...
      fullfile(systems_path, [system_name '_jacobian_params']))

    derivatives_for_cvode = {
      fullfile(system_path, 'jacobian_cvode.c'), ... 
      fullfile(system_path, 'd_sensitivity_dt.c'), ... 
      fullfile(system_path, 'd_sensitivity_dt_pars.c') ... 
    };
  end

  if any(strcmp({'cvode', 'cvode_sparse'}, '<%= s.output_type %>'))
    sundails_sources = dir(fullfile(sundails_path, '**', '*.c'));
    sundails_sources = arrayfun(@(f) fullfile(f.folder, f.name), ...
                             sundails_sources, 'UniformOutput', false);

    mex( ... 
      fullfile(generator_path, 'cvode_mex', 'cvode_mex.c'), ... 
      fullfile(system_path, 'dydt_cvode.c'), ... 
      derivatives_for_cvode{:}, ...
      sundails_sources{:}, ...
      ['-I' fullfile(sundails_path, 'include')], ... 
      ['-I' fullfile(generator_path, 'cvode_mex')], ... 
      ['-I' system_path], ... 
       ... '-g', ... % uncomment for debugging symbols, ... 
       ... not including preprocessor definitions, ... 
       ... 'CFLAGS=$CFLAGS -g3', ..., ... 
       ... uncomment the previous line for debugging symbols , ... 
       ... including preprocessor definitions (for gcc), ... 
      '-output', fullfile(systems_path, [system_name '_cvode']) ... 
    )
  end
end

