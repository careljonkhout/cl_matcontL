% demonstration of how to extend a collocation continuation of a cycle.

load([get_path(), 'point_cycle_oc.mat']);


init_collocation_extend_curve( ...
  'continuation_state',                     point.x, ...
  'ode_parameters',                         point.parametervalues, ...
  'active_parameter_index',                 2, ...
  'odefile',                                @Brusselator_1d.homogeneous_x0,  ...
  'time_mesh',                              point.timemesh, ...
  'current_nMeshIntervals',                 point.ntst, ...
  'current_nCollocationPoints',             point.ncol);

opts = contset();
opts = contset(opts, ...
  ...
  'InitStepsize',           0.05, ...
  'MaxStepsize',            0.05, ...
  'MaxNumPoints',           30, ...
  'contL_DiagnosticsLevel', 0, ...
  'console_output_level',   0, ...
  'contL_SmoothingAngle',   100, ...
  'newtcorrL_use_max_norm', true, ...
  'Singularities',          true, ...
  'enable_nf_ns',           false, ...
  'enable_nf_lpc',          false, ...
  'enable_nf_pd',           false, ...
  'singularity_callback',   @plot_singularity_of_cycles);

figure

% each line segment of the approximation of the curve is plotted separately
% therefore, the plot has to "hold" the previously plotted line segments
hold on
% we set the axes labels
xlabel('L')
ylabel('period')
title_format_string = 'Brusselator N:%d  A:%.0f  B:%.1f  Dx:%.3f  Dy:%.3f';
title_format_args = {N,A,B,Dx,Dy};
% we set the title of the plot.
% the title has two lines
title({'extended continuation - collocation', ...
       sprintf(title_format_string, title_format_args{:})});
drawnow
% we run the cycle continuation:
contL(@limitcycleL, point.x, point.v, opts, 'callback', @plot_T_versus_param);

