% demonstration of how to extend a single shooting continuation of a cycle.

% note: the current cl_matcontL implementation (june 2019) of single shooting
% with (or without) Newton-Picard is quite slow compared to orthogonal
% collocation for systems of ODEs of up to 350 equations. This file is just
% intended to show how to set up a single shooting continuation.

load([get_path(), 'point_cycle_ss.mat']);


L = 0.5; A = 2; B = 5.45; Dx = 0.008; Dy = 0.004;
% The continuation state is stored in point.x
% The last two coordinates of the continuation state vector are the period and
% the value of the active parameter. The remaining coordinates are the
% coordinates of in the state space of the ODE of a point on the cycle. The
% Brusselator system has two PDE, so the number of spatial mesh points N is the
% number of coordinates in the discretized system divided by two.
N = (length(point.x) - 2) / 2;
ode_parameters = {N L A B Dx Dy};


init_single_shooting_extend_curve( ...
  'initial_continuation_state',             point.x, ...
  'ode_parameters',                         ode_parameters, ...
  'active_parameter_index',                 2, ...
  'odefile',                                @brusselator_1d,  ...
  'subspace_size',                          length(point.multipliers) ...
);

opts = contset();
opts = contset(opts, ...
  ...
  'InitStepsize',           0.05, ...
  'MaxStepsize',            0.05, ...
  'MaxNumPoints',           5, ...
  'contL_DiagnosticsLevel', 4, ...
  'console_output_level',   4, ...
  'NewtonPicard',           true, ...
  'contL_SmoothingAngle',   100, ...
  'newtcorrL_use_max_norm', true, ...
  'Singularities',          true, ...
  'enable_nf_ns',           false, ...
  'enable_nf_lpc',          false, ...
  'enable_nf_pd',           false);


singularities = contL(@single_shooting, point.x, point.v, opts);



