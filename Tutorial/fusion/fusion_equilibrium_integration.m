%% continuation of equilibrium in fusion system.
% the equilibrium is found by time integration
function fusion_equilibrium_integration

  options = contset( ...
    'MaxNumPoints',            28, ...
    'InitStepsize',            0.25, ...
    'MinStepsize',             1e-6, ...
    'MaxStepsize',             0.25, ...
    'MaxNewtonIters',          8, ...
    'MaxCorrIters',            10, ... 
    'MaxTestIters',            10, ...
    'Backward',                true, ...
    'VarTolerance',            1e-3, ...
    'FunTolerance',            1e-3, ...
    'Adapt',                   3, ...
    'Singularities',           true, ...
    'Locators',                [true true true], ...
    'singularity_callback',    @plot_singularity_of_equilibria);
  
  N         =  50;
  Gamma_inf = -0.8;
  q_inf     = -0.6;
  D0        =  1.9;
  D1        = -1.1;
  D2        =  0;
  a         = -1;
  b         = -0.3; 
  zeta1     =  1.1;
  mu1       =  0.05;
  epsilon   =  0.05; 
  ZS        =  0;
  gamma1    =  5/3;
  lambdan   =  1.25;
  lambdaT   =  1.5;
  cn        =  1.1;
  cT        =  0.9;

  ode_parameters = [ N, Gamma_inf, q_inf, D0, D1, D2, a, b, ...
                     zeta1, mu1, epsilon, ZS, gamma1, lambdan, lambdaT, cn, cT];                    
  
  initial_continuation_data = init_EP_integration( ...
    'initial_point',                   ones(3*(N-1),1), ...
    'time_to_converge_to_equilibrium', 150, ... 
    'odefile',                         @fusion,  ...
    'ode_parameters',                  ode_parameters, ...
    'active_parameter_index',          3, ...
    'show_plot',                       true ...
  );

  figure
  hold on
  title('fusion - continuation of equilibrium found by time integration');
  xlabel('q_{inf}')
  ylabel('norm of equilibrium')

  contL(@equilibriumL, initial_continuation_data, [], options, ...
                     'callback', @plot_norm_versus_param);
end