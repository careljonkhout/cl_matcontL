--- /Users/tim/research/libs/matlab/eigsplus2/sources/matlab/R2016b/eigs.m	2016-02-11 16:12:04.000000000 +0100
+++ /Users/tim/research/libs/matlab/eigsplus2/sources/modified/eigsPlus_R2016b.m	2016-11-22 13:23:59.000000000 +0100
@@ -1,4 +1,21 @@
-function  varargout = eigs(varargin)
+function  varargout = eigsPlus_R2016b(varargin)
+% 
+% eigsPlus autogenerated code
+% 
+% eigsPlus modified version of eigs.m (R2016b) makes the following changes:
+% 
+% 1) a warning is thrown instead of an error when none of the eigenvalues
+%    converge and an array of NaN eigenvalues is returned. 
+%
+% 2) The optional third output argument now returns the number of ARPACK
+%    iterations.  0 is returned if a full eig call is done.  Flag is no
+%    longer returned as the user may check for the presence of NaNs is the
+%    eigenvalue output to determine if not all k requested eigenvalues
+%    converged to tolerance.
+%
+% 3) opts.isreal may be set to false to force the complex solver if A is 
+%    real and opts.v0 is real or if A is real and opts.v0 is complex.  
+%
 %EIGS  Find a few eigenvalues and eigenvectors of a matrix
 %   D = EIGS(A) returns a vector of A's 6 largest magnitude eigenvalues.
 %   A must be square and should be large and sparse.
@@ -373,9 +390,15 @@
     varargout{1} = v;
     varargout{2} = diag(d);
 end
+% EIGSPLUS modification block START
+% replace third argument flag to instead be the number of ARPACK iters 
+% if nargout >= 3
+%     varargout{3} = flag;
+% end
 if nargout >= 3
-    varargout{3} = flag;
+    varargout{3} = double(ipntr(15));
 end
+% EIGSPLUS modification block END
 
 cputms(4) = cputime-t0; % end timing post-processing
 
@@ -632,7 +655,11 @@
                     error(message('MATLAB:eigs:InvalidOptsIssym'));
                 end
             end
-            if isfield(opts,'isreal') && ~Amatrix
+            % EIGSPLUS modification block START
+            % allow forcing complex solver, with (real A and real v0) or 
+            % (real A and complex v0)
+            if isfield(opts,'isreal') % && ~Amatrix
+            % EIGSPLUS modification block END
                 if (opts.isreal ~= false) && (opts.isreal ~= true)
                     error(message('MATLAB:eigs:InvalidOptsIsreal'));
                 end
@@ -1130,7 +1157,11 @@
             varargout{1} = V(:,ind);
             varargout{2} = D(ind,ind);
             if (nOutputs == 3)
-                % flag indicates "convergence"
+                % EIGSPLUS modification block START
+                % update to comments only
+                % third output argument is the number of ARPACK iters
+                % if full eig is called, this will be 0 
+                % EIGSPLUS modification block END
                 varargout{3} = 0;
             end
         end
@@ -1286,7 +1317,11 @@
                 case 1
                     error(message('MATLAB:eigs:ARPACKroutineError01', eupdfun));
                 case -14
-                    error(message('MATLAB:eigs:ARPACKroutineErrorMinus14', eupdfun, aupdfun));
+                    % EIGSPLUS modification block START
+                    % instead of an error when no Ritz values converge,
+                    % allow a normal return, but with a warning 
+                    warning(message('MATLAB:eigs:ARPACKroutineErrorMinus14', eupdfun, aupdfun));
+                    % EIGSPLUS modification block END
                 otherwise
                     error(message('MATLAB:eigs:ARPACKroutineError', eupdfun, full(info)));
             end
