--- /Users/tim/research/releases/eigsPlus/sources/matlab/R2017a/eigs.m	2018-03-20 15:17:56.000000000 +0100
+++ /Users/tim/research/releases/eigsPlus/sources/modified/eigsPlus_R2017a.m	2018-03-28 10:49:12.000000000 +0200
@@ -1,4 +1,22 @@
-function [V, D, flag] = eigs(varargin)
+function  [V, D, flag]  = eigsPlus_R2017a(varargin)
+% 
+% eigsPlus autogenerated code
+% 
+% eigsPlus modified version of eigs.m (R2017a) makes the following changes:
+%
+% 1) The optional third output argument now returns the number of ARPACK
+%    iterations.  0 is returned if a full eig call is done.  Flag is no
+%    longer returned as the user may check for the presence of NaNs is the
+%    eigenvalue output to determine if not all k requested eigenvalues
+%    converged to tolerance.
+%
+% 2) opts.isreal may be set to false to force the complex solver if A is 
+%    real and opts.v0 is real or if A is real and opts.v0 is complex.  
+%
+% The default eigs in R2017a now adopts the convention that only a warning
+% is thrown when no eigenvalues converge so this particular eigsPlus
+% modification is no longer necessary.
+%
 %EIGS  Find a few eigenvalues and eigenvectors of a matrix
 %   D = EIGS(A) returns a vector of A's 6 largest magnitude eigenvalues.
 %   A must be square and should be large and sparse.
@@ -311,7 +329,11 @@
             error(message('MATLAB:eigs:InvalidOptsIssym'));
         end
     end
-    if isfield(opts,'isreal') && ~Amatrix
+    % EIGSPLUS modification block START
+    % allow forcing complex solver, with (real A and real v0) or
+    % (real A and complex v0)
+    if isfield(opts,'isreal') % && ~Amatrix
+    % EIGSPLUS modification block END
         if ~isscalar(opts.isreal) || (opts.isreal ~= true && opts.isreal ~= false)
             error(message('MATLAB:eigs:InvalidOptsIsreal'));
         end
@@ -1051,7 +1073,12 @@
     end
 end
 
-flag = processEUPDinfo(nOutputs<3);
+% EIGSPLUS modification block START
+% replace third argument flag to instead be the number of ARPACK iters 
+% flag = processEUPDinfo(nOutputs<3);
+processEUPDinfo(nOutputs<3);
+flag = double(ipntr(15));  
+% EIGSPLUS modification block END
 
 % Nested functions in CallARPACK
     function cols = checkIpntr
